<body>

    <main id="main" class="main">


        <div class="pagetitle">
            <h1>Add product</h1>
            <nav>
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a href="/admin">Home</a></li>
                    <li class="breadcrumb-item active">Add</li>
                </ol>
            </nav>
        </div><!-- End Page Title -->

        <section class="section dashboard">
            <div class="row">

                <!-- Left side columns -->
                <div class="col-lg-8 overflow-auto">
                    <div class="row">

                        <form class="row g-3" method="post" enctype="multipart/form-data" onsubmit=" return validate()">
                            <div class="col-12">

                                <input type="text" class="form-control nameinput " placeholder="Enter product name"
                                    name="name" onkeyup="namecheck()">
                                <span class="nameer" style="color: red;"></span>

                            </div>
                            <div class="col-12">

                                <input type="text" class="form-control priceinput"
                                    placeholder="Enter product real price" name="price" onkeyup="numcheck()">
                                <span class="price" style="color: red;"></span>

                            </div>


                            <div class="col-12">

                                <textarea class="form-control addinput" placeholder="enter product description"
                                    name="discription" onkeyup="addcheck()" style="height: 100px;"></textarea>
                                <span class="adder" style="color: red;"> </span>

                            </div>



                            <!-- Button trigger modal -->
                           
                    </div>




                    <div class="col-12">
                        <select class="form-select form-control required " aria-label="Default select example"
                            name="catg">

                            <option value="" selected>Open this select menu </option>
                            {{#each catg}}
                            <option value="{{this.catg}}">{{this.catg}} </option>

                            {{/each}}
                        </select>
                        <span class="catger" style="color: red;"></span>

                    </div>
                    <input type="text" class="form-control qinput" id="q" placeholder="Enter stock quantity" name="qnty"
                        onkeyup="qcheck()">
                    <span class="qer" style="color: red;"></span>


                    <div class="col-12">
                        {{#if er}}
                        <label class="text-danger">product already exists</label>
                        {{/if}}
                    </div>
                    <div class="col-12">
                        <div class="text-center">
                            <button type="submit" class="btn btn-primary">Submit</button>

                        </div>
                    </div>

                    </form><!-- End floating Labels Form -->









                </div>
            </div>

        </section>

    </main><!-- End #main -->

</body>
<script>
    const file = document.getElementById('img')
  let image = document.getElementById('imp')
  let url = []
  let imgdata = []
  file.addEventListener('change', () => {
    const fil = document.getElementById('img').files
    console.log(typeof (fil))
    let length = fil.length
    Array.from(fil).forEach((e, i) => {
      console.log(e)
      url[i] = URL.createObjectURL(e)
      image.innerHTML += `<div class="col-4"><div id="image-box${i}" class="image-container" style="height: 350px; width: 350px;"><img src="${url[i]}" id="image${i}" style="width:100%;"></div>
    <button class="btn btn-outline-info" id="crop-btn${i}" style="width: 100%; margin-top: 10px; display: block;" type="button">Crop</button> </div>`


    });
    let container = new DataTransfer();
    let fileInputElement = document.getElementById('img');

    for (i = 0; i < length; i++) {
      imgdata[i] = file.files[i]
      console.log(document.getElementById('crop-btn' + i))
      cropper(imgdata[i], document.getElementById('image' + i), i, document.getElementById('crop-btn' + i), document.getElementById('image-box' + i))
    }
    console.log(imgdata)
    function cropper(img_data, image, index, crop_btn, imagebox) {

      const cropper = new Cropper(image, {
        autoCropArea: 1,
        viewMode: 1,
        scalable: false,
        zoomable: false,
        movable: false,
        minCropBoxWidth: 50,
        minCropBoxHeight: 50,
      })

      crop_btn.addEventListener('click', () => {
        // This method coverts the selected cropped image on the cropper canvas into a blob object
        cropper.getCroppedCanvas().toBlob((blob) => {

          // Gets the original image data
          // Make a new cropped image file using that blob object, image_data.name will make the new file name same as original image
          let file = new File([blob], img_data.name, { type: "image/jpeg", lastModified: new Date().getTime() });
          // Create a new container
          // Add the cropped image file to the container
          container.items.add(file);

          fileInputElement.files = container.files
          // Replace the original image file with the new cropped image file
          // Hide the cropper box
          imagebox.style.display = 'none'
          // Hide the crop button
          crop_btn.style.display = 'none'
        });
      });
    }





  })
    






    function namecheck() {
        let ndata = document.getElementsByClassName('form-control nameinput')[0].value
        console.log(ndata)
        if (ndata.length < 5) {
            document.getElementsByClassName('nameer')[0].innerHTML = "enter min 5 character"
            return false


        }
        else {
            document.getElementsByClassName('nameer')[0].innerHTML = ""
            return true
        }
    }
    function addcheck() {
        console.log('h')
        let ndata = document.getElementsByClassName('form-control addinput')[0].value
        console.log(ndata)
        if (ndata.length < 5) {
            document.getElementsByClassName('adder')[0].innerHTML = "enter min 5 character"
            return false


        }
        else {
            document.getElementsByClassName('adder')[0].innerHTML = ""
            return true
        }
    }


    function numcheck() {
        let ndata = document.getElementsByClassName('form-control priceinput')[0].value
        if (isNaN(ndata) || ndata <= 0 || (Math.floor(ndata) == 0)) {
            document.getElementsByClassName('price')[0].innerHTML = "eneter a valid price"
            return false

        }
        else if (ndata == "") {
            document.getElementsByClassName('price')[0].innerHTML = "eneter a valid price"
            return false
        }
        else {
            document.getElementsByClassName('price')[0].innerHTML = ""
            return true
        }
    }





    function qcheck() {
        let ndata = document.getElementById('q').value

        if (isNaN(ndata) || ndata <= 0 || Math.floor(ndata) == 0) {
            document.getElementsByClassName('qer')[0].innerHTML = "eneter a valid stock"
            return false

        }
        else if (ndata == "") {
            document.getElementsByClassName('qer')[0].innerHTML = "eneter a valid stock"
            return false
        }
        else {
            document.getElementsByClassName('qer')[0].innerHTML = ""
            return true
        }
    }
    function catgcheck() {
        let catgdata = document.getElementsByClassName('form-select form-control')[0].value
        if (catgdata == "") {
            document.getElementsByClassName('catger')[0].innerHTML = "catagory cannote be empty"
            console.log("jooi")

            return false

        }
        else {
            document.getElementsByClassName('catger')[0].innerHTML = ""
            return true
        }

    }
    </script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.11/cropper.js"></script>

<!-- Optional JavaScript; choose one of the two! -->


<!-- Template Main JS File -->
<script src="/stylesheets/assets/js/main.js"></script>
<!-- Option 1: Bootstrap Bundle with Popper -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.bundle.min.js"
    integrity="sha384-MrcW6ZMFYlzcLA8Nl+NtUVF0sA7MsXsP1UyJoMp4YLEuNSfAP+JcXn/tWtIaxVXM"
    crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.bundle.min.js"></script>
<!-- Option 2: Separate Popper and Bootstrap JS -->

<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.9.2/dist/umd/popper.min.js"
    integrity="sha384-IQsoLXl5PILFhosVNubq5LC7Qb9DXgDA9i+tQ8Zj3iwWAwPtgFTxbJ8NT4GN1R8p"
    crossorigin="anonymous"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/js/bootstrap.min.js"
    integrity="sha384-cVKIPhGWiC2Al4u+LWgxfKTRIcfu0JTxR+EQDz/bgldoEyl4H0zUF0QKbrJ0EcQF"
    crossorigin="anonymous"></script>

</html>